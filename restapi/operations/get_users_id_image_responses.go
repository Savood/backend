// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// GetUsersIDImageOKCode is the HTTP code returned for type GetUsersIDImageOK
const GetUsersIDImageOKCode int = 200

/*GetUsersIDImageOK OK

swagger:response getUsersIdImageOK
*/
type GetUsersIDImageOK struct {

	/*
	  In: Body
	*/
	Payload models.GetUsersIDImageOKBody `json:"body,omitempty"`
}

// NewGetUsersIDImageOK creates GetUsersIDImageOK with default headers values
func NewGetUsersIDImageOK() *GetUsersIDImageOK {

	return &GetUsersIDImageOK{}
}

// WithPayload adds the payload to the get users Id image o k response
func (o *GetUsersIDImageOK) WithPayload(payload models.GetUsersIDImageOKBody) *GetUsersIDImageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users Id image o k response
func (o *GetUsersIDImageOK) SetPayload(payload models.GetUsersIDImageOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersIDImageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetUsersIDImageNotFoundCode is the HTTP code returned for type GetUsersIDImageNotFound
const GetUsersIDImageNotFoundCode int = 404

/*GetUsersIDImageNotFound The specified resource was not found

swagger:response getUsersIdImageNotFound
*/
type GetUsersIDImageNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewGetUsersIDImageNotFound creates GetUsersIDImageNotFound with default headers values
func NewGetUsersIDImageNotFound() *GetUsersIDImageNotFound {

	return &GetUsersIDImageNotFound{}
}

// WithPayload adds the payload to the get users Id image not found response
func (o *GetUsersIDImageNotFound) WithPayload(payload *models.ErrorModel) *GetUsersIDImageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users Id image not found response
func (o *GetUsersIDImageNotFound) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersIDImageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersIDImageInternalServerErrorCode is the HTTP code returned for type GetUsersIDImageInternalServerError
const GetUsersIDImageInternalServerErrorCode int = 500

/*GetUsersIDImageInternalServerError Generic Error

swagger:response getUsersIdImageInternalServerError
*/
type GetUsersIDImageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewGetUsersIDImageInternalServerError creates GetUsersIDImageInternalServerError with default headers values
func NewGetUsersIDImageInternalServerError() *GetUsersIDImageInternalServerError {

	return &GetUsersIDImageInternalServerError{}
}

// WithPayload adds the payload to the get users Id image internal server error response
func (o *GetUsersIDImageInternalServerError) WithPayload(payload *models.ErrorModel) *GetUsersIDImageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users Id image internal server error response
func (o *GetUsersIDImageInternalServerError) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersIDImageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

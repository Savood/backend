// Code generated by go-swagger; DO NOT EDIT.

package offerings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/backend/models"
)

// UpdateOfferingByIDNoContentCode is the HTTP code returned for type UpdateOfferingByIDNoContent
const UpdateOfferingByIDNoContentCode int = 204

/*UpdateOfferingByIDNoContent Accepted; No response.

swagger:response updateOfferingByIdNoContent
*/
type UpdateOfferingByIDNoContent struct {
}

// NewUpdateOfferingByIDNoContent creates UpdateOfferingByIDNoContent with default headers values
func NewUpdateOfferingByIDNoContent() *UpdateOfferingByIDNoContent {

	return &UpdateOfferingByIDNoContent{}
}

// WriteResponse to the client
func (o *UpdateOfferingByIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// UpdateOfferingByIDBadRequestCode is the HTTP code returned for type UpdateOfferingByIDBadRequest
const UpdateOfferingByIDBadRequestCode int = 400

/*UpdateOfferingByIDBadRequest Invalid parameter input was passed

swagger:response updateOfferingByIdBadRequest
*/
type UpdateOfferingByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewUpdateOfferingByIDBadRequest creates UpdateOfferingByIDBadRequest with default headers values
func NewUpdateOfferingByIDBadRequest() *UpdateOfferingByIDBadRequest {

	return &UpdateOfferingByIDBadRequest{}
}

// WithPayload adds the payload to the update offering by Id bad request response
func (o *UpdateOfferingByIDBadRequest) WithPayload(payload *models.InvalidParameterInput) *UpdateOfferingByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update offering by Id bad request response
func (o *UpdateOfferingByIDBadRequest) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOfferingByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package offerings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// CreateNewOfferingOKCode is the HTTP code returned for type CreateNewOfferingOK
const CreateNewOfferingOKCode int = 200

/*CreateNewOfferingOK Object found and returned

swagger:response createNewOfferingOK
*/
type CreateNewOfferingOK struct {

	/*
	  In: Body
	*/
	Payload *models.Offering `json:"body,omitempty"`
}

// NewCreateNewOfferingOK creates CreateNewOfferingOK with default headers values
func NewCreateNewOfferingOK() *CreateNewOfferingOK {

	return &CreateNewOfferingOK{}
}

// WithPayload adds the payload to the create new offering o k response
func (o *CreateNewOfferingOK) WithPayload(payload *models.Offering) *CreateNewOfferingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new offering o k response
func (o *CreateNewOfferingOK) SetPayload(payload *models.Offering) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewOfferingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNewOfferingNotFoundCode is the HTTP code returned for type CreateNewOfferingNotFound
const CreateNewOfferingNotFoundCode int = 404

/*CreateNewOfferingNotFound Invalid parameter input was passed

swagger:response createNewOfferingNotFound
*/
type CreateNewOfferingNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewCreateNewOfferingNotFound creates CreateNewOfferingNotFound with default headers values
func NewCreateNewOfferingNotFound() *CreateNewOfferingNotFound {

	return &CreateNewOfferingNotFound{}
}

// WithPayload adds the payload to the create new offering not found response
func (o *CreateNewOfferingNotFound) WithPayload(payload *models.InvalidParameterInput) *CreateNewOfferingNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new offering not found response
func (o *CreateNewOfferingNotFound) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewOfferingNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// PlaceSavoodOKCode is the HTTP code returned for type PlaceSavoodOK
const PlaceSavoodOKCode int = 200

/*PlaceSavoodOK Savood is placed

swagger:response placeSavoodOK
*/
type PlaceSavoodOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessObject `json:"body,omitempty"`
}

// NewPlaceSavoodOK creates PlaceSavoodOK with default headers values
func NewPlaceSavoodOK() *PlaceSavoodOK {

	return &PlaceSavoodOK{}
}

// WithPayload adds the payload to the place savood o k response
func (o *PlaceSavoodOK) WithPayload(payload *models.SuccessObject) *PlaceSavoodOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the place savood o k response
func (o *PlaceSavoodOK) SetPayload(payload *models.SuccessObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PlaceSavoodOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PlaceSavoodBadRequestCode is the HTTP code returned for type PlaceSavoodBadRequest
const PlaceSavoodBadRequestCode int = 400

/*PlaceSavoodBadRequest Invalid parameter input was passed

swagger:response placeSavoodBadRequest
*/
type PlaceSavoodBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewPlaceSavoodBadRequest creates PlaceSavoodBadRequest with default headers values
func NewPlaceSavoodBadRequest() *PlaceSavoodBadRequest {

	return &PlaceSavoodBadRequest{}
}

// WithPayload adds the payload to the place savood bad request response
func (o *PlaceSavoodBadRequest) WithPayload(payload *models.InvalidParameterInput) *PlaceSavoodBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the place savood bad request response
func (o *PlaceSavoodBadRequest) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PlaceSavoodBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

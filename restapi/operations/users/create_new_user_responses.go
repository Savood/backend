// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// CreateNewUserOKCode is the HTTP code returned for type CreateNewUserOK
const CreateNewUserOKCode int = 200

/*CreateNewUserOK Object found and returned

swagger:response createNewUserOK
*/
type CreateNewUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewCreateNewUserOK creates CreateNewUserOK with default headers values
func NewCreateNewUserOK() *CreateNewUserOK {

	return &CreateNewUserOK{}
}

// WithPayload adds the payload to the create new user o k response
func (o *CreateNewUserOK) WithPayload(payload *models.User) *CreateNewUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new user o k response
func (o *CreateNewUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNewUserBadRequestCode is the HTTP code returned for type CreateNewUserBadRequest
const CreateNewUserBadRequestCode int = 400

/*CreateNewUserBadRequest Invalid parameter input was passed

swagger:response createNewUserBadRequest
*/
type CreateNewUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewCreateNewUserBadRequest creates CreateNewUserBadRequest with default headers values
func NewCreateNewUserBadRequest() *CreateNewUserBadRequest {

	return &CreateNewUserBadRequest{}
}

// WithPayload adds the payload to the create new user bad request response
func (o *CreateNewUserBadRequest) WithPayload(payload *models.InvalidParameterInput) *CreateNewUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new user bad request response
func (o *CreateNewUserBadRequest) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

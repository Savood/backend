// Code generated by go-swagger; DO NOT EDIT.

package offering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// OfferingIDGetOKCode is the HTTP code returned for type OfferingIDGetOK
const OfferingIDGetOKCode int = 200

/*OfferingIDGetOK Object found and returned

swagger:response offeringIdGetOK
*/
type OfferingIDGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.Offering `json:"body,omitempty"`
}

// NewOfferingIDGetOK creates OfferingIDGetOK with default headers values
func NewOfferingIDGetOK() *OfferingIDGetOK {

	return &OfferingIDGetOK{}
}

// WithPayload adds the payload to the offering Id get o k response
func (o *OfferingIDGetOK) WithPayload(payload *models.Offering) *OfferingIDGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the offering Id get o k response
func (o *OfferingIDGetOK) SetPayload(payload *models.Offering) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OfferingIDGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// OfferingIDGetNotFoundCode is the HTTP code returned for type OfferingIDGetNotFound
const OfferingIDGetNotFoundCode int = 404

/*OfferingIDGetNotFound Invalid parameter input was passed

swagger:response offeringIdGetNotFound
*/
type OfferingIDGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewOfferingIDGetNotFound creates OfferingIDGetNotFound with default headers values
func NewOfferingIDGetNotFound() *OfferingIDGetNotFound {

	return &OfferingIDGetNotFound{}
}

// WithPayload adds the payload to the offering Id get not found response
func (o *OfferingIDGetNotFound) WithPayload(payload *models.InvalidParameterInput) *OfferingIDGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the offering Id get not found response
func (o *OfferingIDGetNotFound) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OfferingIDGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

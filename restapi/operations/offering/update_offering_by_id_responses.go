// Code generated by go-swagger; DO NOT EDIT.

package offering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// UpdateOfferingByIDNoContentCode is the HTTP code returned for type UpdateOfferingByIDNoContent
const UpdateOfferingByIDNoContentCode int = 204

/*UpdateOfferingByIDNoContent Accepted; No response.

swagger:response updateOfferingByIdNoContent
*/
type UpdateOfferingByIDNoContent struct {
}

// NewUpdateOfferingByIDNoContent creates UpdateOfferingByIDNoContent with default headers values
func NewUpdateOfferingByIDNoContent() *UpdateOfferingByIDNoContent {

	return &UpdateOfferingByIDNoContent{}
}

// WriteResponse to the client
func (o *UpdateOfferingByIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// UpdateOfferingByIDNotFoundCode is the HTTP code returned for type UpdateOfferingByIDNotFound
const UpdateOfferingByIDNotFoundCode int = 404

/*UpdateOfferingByIDNotFound Invalid parameter input was passed

swagger:response updateOfferingByIdNotFound
*/
type UpdateOfferingByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewUpdateOfferingByIDNotFound creates UpdateOfferingByIDNotFound with default headers values
func NewUpdateOfferingByIDNotFound() *UpdateOfferingByIDNotFound {

	return &UpdateOfferingByIDNotFound{}
}

// WithPayload adds the payload to the update offering by Id not found response
func (o *UpdateOfferingByIDNotFound) WithPayload(payload *models.InvalidParameterInput) *UpdateOfferingByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update offering by Id not found response
func (o *UpdateOfferingByIDNotFound) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOfferingByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

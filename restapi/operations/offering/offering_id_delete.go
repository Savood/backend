// Code generated by go-swagger; DO NOT EDIT.

package offering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// OfferingIDDeleteHandlerFunc turns a function with the right signature into a offering Id delete handler
type OfferingIDDeleteHandlerFunc func(OfferingIDDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn OfferingIDDeleteHandlerFunc) Handle(params OfferingIDDeleteParams) middleware.Responder {
	return fn(params)
}

// OfferingIDDeleteHandler interface for that can handle valid offering Id delete params
type OfferingIDDeleteHandler interface {
	Handle(OfferingIDDeleteParams) middleware.Responder
}

// NewOfferingIDDelete creates a new http.Handler for the offering Id delete operation
func NewOfferingIDDelete(ctx *middleware.Context, handler OfferingIDDeleteHandler) *OfferingIDDelete {
	return &OfferingIDDelete{Context: ctx, Handler: handler}
}

/*OfferingIDDelete swagger:route DELETE /offering/{id} offering offeringIdDelete

Delete an offering

*/
type OfferingIDDelete struct {
	Context *middleware.Context
	Handler OfferingIDDeleteHandler
}

func (o *OfferingIDDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewOfferingIDDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

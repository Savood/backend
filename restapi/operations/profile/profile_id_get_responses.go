// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// ProfileIDGetOKCode is the HTTP code returned for type ProfileIDGetOK
const ProfileIDGetOKCode int = 200

/*ProfileIDGetOK Object found and returned

swagger:response profileIdGetOK
*/
type ProfileIDGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.Profile `json:"body,omitempty"`
}

// NewProfileIDGetOK creates ProfileIDGetOK with default headers values
func NewProfileIDGetOK() *ProfileIDGetOK {

	return &ProfileIDGetOK{}
}

// WithPayload adds the payload to the profile Id get o k response
func (o *ProfileIDGetOK) WithPayload(payload *models.Profile) *ProfileIDGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profile Id get o k response
func (o *ProfileIDGetOK) SetPayload(payload *models.Profile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfileIDGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProfileIDGetNotFoundCode is the HTTP code returned for type ProfileIDGetNotFound
const ProfileIDGetNotFoundCode int = 404

/*ProfileIDGetNotFound Invalid parameter input was passed

swagger:response profileIdGetNotFound
*/
type ProfileIDGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewProfileIDGetNotFound creates ProfileIDGetNotFound with default headers values
func NewProfileIDGetNotFound() *ProfileIDGetNotFound {

	return &ProfileIDGetNotFound{}
}

// WithPayload adds the payload to the profile Id get not found response
func (o *ProfileIDGetNotFound) WithPayload(payload *models.InvalidParameterInput) *ProfileIDGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profile Id get not found response
func (o *ProfileIDGetNotFound) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfileIDGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

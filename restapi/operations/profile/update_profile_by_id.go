// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateProfileByIDHandlerFunc turns a function with the right signature into a update profile by Id handler
type UpdateProfileByIDHandlerFunc func(UpdateProfileByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateProfileByIDHandlerFunc) Handle(params UpdateProfileByIDParams) middleware.Responder {
	return fn(params)
}

// UpdateProfileByIDHandler interface for that can handle valid update profile by Id params
type UpdateProfileByIDHandler interface {
	Handle(UpdateProfileByIDParams) middleware.Responder
}

// NewUpdateProfileByID creates a new http.Handler for the update profile by Id operation
func NewUpdateProfileByID(ctx *middleware.Context, handler UpdateProfileByIDHandler) *UpdateProfileByID {
	return &UpdateProfileByID{Context: ctx, Handler: handler}
}

/*UpdateProfileByID swagger:route PATCH /profile/{id} profile updateProfileById

Update a profile

*/
type UpdateProfileByID struct {
	Context *middleware.Context
	Handler UpdateProfileByIDHandler
}

func (o *UpdateProfileByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateProfileByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

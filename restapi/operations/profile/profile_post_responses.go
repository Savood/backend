// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// ProfilePostOKCode is the HTTP code returned for type ProfilePostOK
const ProfilePostOKCode int = 200

/*ProfilePostOK Object found and returned

swagger:response profilePostOK
*/
type ProfilePostOK struct {

	/*
	  In: Body
	*/
	Payload *models.Profile `json:"body,omitempty"`
}

// NewProfilePostOK creates ProfilePostOK with default headers values
func NewProfilePostOK() *ProfilePostOK {

	return &ProfilePostOK{}
}

// WithPayload adds the payload to the profile post o k response
func (o *ProfilePostOK) WithPayload(payload *models.Profile) *ProfilePostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profile post o k response
func (o *ProfilePostOK) SetPayload(payload *models.Profile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilePostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProfilePostNotFoundCode is the HTTP code returned for type ProfilePostNotFound
const ProfilePostNotFoundCode int = 404

/*ProfilePostNotFound Invalid parameter input was passed

swagger:response profilePostNotFound
*/
type ProfilePostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewProfilePostNotFound creates ProfilePostNotFound with default headers values
func NewProfilePostNotFound() *ProfilePostNotFound {

	return &ProfilePostNotFound{}
}

// WithPayload adds the payload to the profile post not found response
func (o *ProfilePostNotFound) WithPayload(payload *models.InvalidParameterInput) *ProfilePostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the profile post not found response
func (o *ProfilePostNotFound) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProfilePostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

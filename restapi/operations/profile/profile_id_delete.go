// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ProfileIDDeleteHandlerFunc turns a function with the right signature into a profile Id delete handler
type ProfileIDDeleteHandlerFunc func(ProfileIDDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ProfileIDDeleteHandlerFunc) Handle(params ProfileIDDeleteParams) middleware.Responder {
	return fn(params)
}

// ProfileIDDeleteHandler interface for that can handle valid profile Id delete params
type ProfileIDDeleteHandler interface {
	Handle(ProfileIDDeleteParams) middleware.Responder
}

// NewProfileIDDelete creates a new http.Handler for the profile Id delete operation
func NewProfileIDDelete(ctx *middleware.Context, handler ProfileIDDeleteHandler) *ProfileIDDelete {
	return &ProfileIDDelete{Context: ctx, Handler: handler}
}

/*ProfileIDDelete swagger:route DELETE /profile/{id} profile profileIdDelete

Delete an profile

*/
type ProfileIDDelete struct {
	Context *middleware.Context
	Handler ProfileIDDeleteHandler
}

func (o *ProfileIDDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewProfileIDDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// Code generated by go-swagger; DO NOT EDIT.

package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/backend/models"
)

// GetMessageByIDOKCode is the HTTP code returned for type GetMessageByIDOK
const GetMessageByIDOKCode int = 200

/*GetMessageByIDOK Object found and returned

swagger:response getMessageByIdOK
*/
type GetMessageByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Message `json:"body,omitempty"`
}

// NewGetMessageByIDOK creates GetMessageByIDOK with default headers values
func NewGetMessageByIDOK() *GetMessageByIDOK {

	return &GetMessageByIDOK{}
}

// WithPayload adds the payload to the get message by Id o k response
func (o *GetMessageByIDOK) WithPayload(payload *models.Message) *GetMessageByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get message by Id o k response
func (o *GetMessageByIDOK) SetPayload(payload *models.Message) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessageByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessageByIDBadRequestCode is the HTTP code returned for type GetMessageByIDBadRequest
const GetMessageByIDBadRequestCode int = 400

/*GetMessageByIDBadRequest Invalid parameter input was passed

swagger:response getMessageByIdBadRequest
*/
type GetMessageByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewGetMessageByIDBadRequest creates GetMessageByIDBadRequest with default headers values
func NewGetMessageByIDBadRequest() *GetMessageByIDBadRequest {

	return &GetMessageByIDBadRequest{}
}

// WithPayload adds the payload to the get message by Id bad request response
func (o *GetMessageByIDBadRequest) WithPayload(payload *models.InvalidParameterInput) *GetMessageByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get message by Id bad request response
func (o *GetMessageByIDBadRequest) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessageByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/backend/models"
)

// CreateNewMessageOKCode is the HTTP code returned for type CreateNewMessageOK
const CreateNewMessageOKCode int = 200

/*CreateNewMessageOK Object found and returned

swagger:response createNewMessageOK
*/
type CreateNewMessageOK struct {

	/*
	  In: Body
	*/
	Payload *models.Message `json:"body,omitempty"`
}

// NewCreateNewMessageOK creates CreateNewMessageOK with default headers values
func NewCreateNewMessageOK() *CreateNewMessageOK {

	return &CreateNewMessageOK{}
}

// WithPayload adds the payload to the create new message o k response
func (o *CreateNewMessageOK) WithPayload(payload *models.Message) *CreateNewMessageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new message o k response
func (o *CreateNewMessageOK) SetPayload(payload *models.Message) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewMessageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateNewMessageBadRequestCode is the HTTP code returned for type CreateNewMessageBadRequest
const CreateNewMessageBadRequestCode int = 400

/*CreateNewMessageBadRequest Invalid parameter input was passed

swagger:response createNewMessageBadRequest
*/
type CreateNewMessageBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewCreateNewMessageBadRequest creates CreateNewMessageBadRequest with default headers values
func NewCreateNewMessageBadRequest() *CreateNewMessageBadRequest {

	return &CreateNewMessageBadRequest{}
}

// WithPayload adds the payload to the create new message bad request response
func (o *CreateNewMessageBadRequest) WithPayload(payload *models.InvalidParameterInput) *CreateNewMessageBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create new message bad request response
func (o *CreateNewMessageBadRequest) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateNewMessageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

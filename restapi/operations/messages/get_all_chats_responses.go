// Code generated by go-swagger; DO NOT EDIT.

package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// GetAllChatsOKCode is the HTTP code returned for type GetAllChatsOK
const GetAllChatsOKCode int = 200

/*GetAllChatsOK Object found and returned

swagger:response getAllChatsOK
*/
type GetAllChatsOK struct {

	/*
	  In: Body
	*/
	Payload models.Chats `json:"body,omitempty"`
}

// NewGetAllChatsOK creates GetAllChatsOK with default headers values
func NewGetAllChatsOK() *GetAllChatsOK {

	return &GetAllChatsOK{}
}

// WithPayload adds the payload to the get all chats o k response
func (o *GetAllChatsOK) WithPayload(payload models.Chats) *GetAllChatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all chats o k response
func (o *GetAllChatsOK) SetPayload(payload models.Chats) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllChatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Chats, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllChatsBadRequestCode is the HTTP code returned for type GetAllChatsBadRequest
const GetAllChatsBadRequestCode int = 400

/*GetAllChatsBadRequest Invalid parameter input was passed

swagger:response getAllChatsBadRequest
*/
type GetAllChatsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewGetAllChatsBadRequest creates GetAllChatsBadRequest with default headers values
func NewGetAllChatsBadRequest() *GetAllChatsBadRequest {

	return &GetAllChatsBadRequest{}
}

// WithPayload adds the payload to the get all chats bad request response
func (o *GetAllChatsBadRequest) WithPayload(payload *models.InvalidParameterInput) *GetAllChatsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all chats bad request response
func (o *GetAllChatsBadRequest) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllChatsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package message

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.dhbw.chd.cx/savood/backend/models"
)

// MessageIDGetOKCode is the HTTP code returned for type MessageIDGetOK
const MessageIDGetOKCode int = 200

/*MessageIDGetOK Object found and returned

swagger:response messageIdGetOK
*/
type MessageIDGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.Message `json:"body,omitempty"`
}

// NewMessageIDGetOK creates MessageIDGetOK with default headers values
func NewMessageIDGetOK() *MessageIDGetOK {

	return &MessageIDGetOK{}
}

// WithPayload adds the payload to the message Id get o k response
func (o *MessageIDGetOK) WithPayload(payload *models.Message) *MessageIDGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the message Id get o k response
func (o *MessageIDGetOK) SetPayload(payload *models.Message) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MessageIDGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MessageIDGetNotFoundCode is the HTTP code returned for type MessageIDGetNotFound
const MessageIDGetNotFoundCode int = 404

/*MessageIDGetNotFound Invalid parameter input was passed

swagger:response messageIdGetNotFound
*/
type MessageIDGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.InvalidParameterInput `json:"body,omitempty"`
}

// NewMessageIDGetNotFound creates MessageIDGetNotFound with default headers values
func NewMessageIDGetNotFound() *MessageIDGetNotFound {

	return &MessageIDGetNotFound{}
}

// WithPayload adds the payload to the message Id get not found response
func (o *MessageIDGetNotFound) WithPayload(payload *models.InvalidParameterInput) *MessageIDGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the message Id get not found response
func (o *MessageIDGetNotFound) SetPayload(payload *models.InvalidParameterInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MessageIDGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
